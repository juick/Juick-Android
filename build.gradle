buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath 'com.google.gms:google-services:4.3.3'
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    jcenter()
    google()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha03'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.0-alpha03'
    implementation 'com.google.android.material:material:1.2.0-alpha04'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.firebase:firebase-core:17.2.2'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    // okhttp 3.13+ require API21
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:3.12.8'
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.8'
    implementation 'com.github.heremaps:oksse:0.9.0'
    // retrofit 2.7.x require API21
    //noinspection GradleDependency
    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    //noinspection GradleDependency
    implementation 'com.squareup.retrofit2:converter-jackson:2.6.4'
    implementation 'co.lujun:androidtagview:1.1.7'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'androidx.annotation:annotation:1.1.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0@aar'
    implementation 'com.github.stfalcon:chatkit:0.3.3'
    implementation 'ch.acra:acra-mail:5.5.0'
}

android {
    compileSdkVersion "android-28"
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 113
        versionName "3.1"
        applicationId "com.juick"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "API_ENDPOINT", '"https://api.juick.com/"'
        buildConfigField "String", "API_ENDPOINT_FALLBACK", '"http://api.juick.com/"'
        buildConfigField "String", "IMAGES_ENDPOINT", '"https://i.juick.com/"'
        buildConfigField "String", "IMAGES_ENDPOINT_FALLBACK", '"http://i.juick.com/"'
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }
    // signing config
    if (file("keystore.properties").exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(file("keystore.properties")))

        signingConfigs {
            release {
                storeFile file(props["key.store"])
                storePassword props["key.store.password"]
                keyAlias props["key.alias"]
                keyPassword props["key.alias.password"]
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                signingConfig signingConfigs.release
            }
        }
    }
    buildTypes {
        dev {

        }
    }
    def build_param = "${build}"

    if (build_param != "dev") {
        //exclude production build
        android.variantFilter { variant ->
            if (variant.buildType.name == 'dev') {
                variant.setIgnore(true)
            }
        }
    } else {
        //exclude all except production build
        android.variantFilter { variant ->
            if (variant.buildType.name != 'dev') {
                variant.setIgnore(true)
            }
        }
    }
}

apply plugin: "com.google.gms.google-services"
googleServices {
    disableVersionCheck = true
}
